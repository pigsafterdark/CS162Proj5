void readUserFile()
{
	ifstream in;
	int tempCounter = 0;
	char tempFName[MAX_CHAR];
	char tempLName[MAX_CHAR];
	int tempNumChecked;

	//If any nodes exist in the linked list,
	//call clearList function
	if (list.GetListLength() != 0)
	{
		clearList();
	}

	

	//Count the number of lines in the input file
	in.open("users.txt")
	while (!in.eof())
	{
		in.ignore(10000, '\n');
		in.peek();
		tempCounter++;
	}
	in.close();
	in.clear(std::ios_base::goodbit);

	in.open("users.txt");

	//Store data from file into temporary variables,
	//pass that data into a new Shell object,
	//add that Shell object to the linked list
	for (int i = 0; i < tempCounter; i++)
	{
		in.get(tempFName, MAX_CHAR, ';');
		in.ignore(MAX_CHAR, ';');
		in.get(tempLName, MAX_CHAR, ';');
		in.ignore(MAX_CHAR, ';');
		in >> tempNumChecked;
		in.ignore(MAX_CHAR, ';');
		in.ignore(MAX_CHAR, '\n');

		User * aUser = new User;
		aUser->setFName(tempFName);
		aUser->setLName(tempLName);
		aShell->setNumChecked(tempNumChecked);

		llUser.AddLinkToBack(aUser);

	}
	in.close();
	in.clear(std::ios_base::goodbit);
}
